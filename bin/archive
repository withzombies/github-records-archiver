#!/usr/bin/env ruby
# Backs up a GitHub organization's repositories and
# all their associated information for archival purposes.
# Usage: ruby archive.rb

require './lib/github_records_archiver'
require 'parallel'

def logger
  @logger ||= Logger.new(STDOUT)
end

def log(msg)
  logger.info(msg)
end

def error(msg)
  logger.error(msg)
end

archiver = GitHubRecordsArchiver
pwd      = Dir.pwd
start    = Time.now
org_name = ARGV[0] || ENV['GITHUB_ORGANIZATION']
org      = archiver::Organization.new org_name

log "Starting archive for @#{org.name} in #{org.archive_dir}"

log "Found #{org.teams.count} teams"
org.teams.map(&:archive)

log "Found #{org.repos.count} repos"
for repo in org.repos
    sleep(1)
    begin

        repo.clone

        begin
            repo.wiki.clone unless repo.wiki.nil?
        rescue GitHubRecordsArchiver::GitError => e
            log "No wiki for #{repo.name}?"
        end

        repo.issues.map(&:archive)

    rescue GitHubRecordsArchiver::GitError => e
        error "Failed to archive #{repo.name}"
        error e.message
    end
end

Dir.chdir pwd
log "Done in #{Time.now - start} seconds."
